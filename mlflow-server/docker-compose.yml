
services:

  mlflowdatabase:
    container_name: mlflowdatabase
    image: postgres:15.2-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mlflow
    ports:
      - "5433:5432"
    volumes:
      - mlflow-db-data:/var/lib/postgresql/data
    networks:
      - mlflow-net


  mlflow:
    container_name: mlflow
    build:
      context: .
    ports:
      - "5001:5001"
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      MLFLOW_BACKEND_STORE_URI: postgresql+psycopg2://postgres:postgres@mlflowdatabase:5432/mlflow
      MLFLOW_DEFAULT_ARTIFACT_ROOT: s3://mlflow/
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_HOST: 0.0.0.0
      MLFLOW_PORT: 5001
    command: >
      mlflow server --host 0.0.0.0 --port 5001
    volumes:
      - mlflow-runs:/mlruns
      - mlflow-artifacts:/mlartifacts
    depends_on:
      - mlflowdatabase
    networks:
      - mlflow-net

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "${MINIO_PORT_1:-9003}:9000"
      - "${MINIO_PORT_2:-9004}:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - mlflow-net

  createbucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set myminio http://minio:9000 minioadmin minioadmin;
        mc mb -p myminio/mlflow;
        mc policy set public myminio/mlflow;
        exit 0;
      "
    networks:
      - mlflow-net

volumes:
  minio-data:
  mlflow-db-data:
  mlflow-runs:
  mlflow-artifacts:

networks:
  mlflow-net:
    external: true
